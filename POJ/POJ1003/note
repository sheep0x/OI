Copyright 2014 陈睿超<linuxer.sheep.0x@gmail.com>
本作品采用知识共享 署名-相同方式共享 4.0 国际 许可协议进行许可。访问 http://creativecommons.org/licenses/by-sa/4.0/deed.zh 查看该许可协议。

暴力算知，n <= 276。276个小数相加，总和不超过8 = 2^3。

若round后得到0b0.001100110100，则round前 >= 0b0.0011001100111 = 0.2000732421875 >= 0.20，故只要精确到2^(-12)即可
若round后得到0b0.00110011010 ，则round前 >= 0b0.001100110011  = 0.199951171875，无法确保>=0.20
故要确保一个二进制数 >= 0.20，至少需要精确到2^(-12)

若round后得到0b0.0011001100，则round前 < 0b0.00110011001 = 0.19970703125 < 0.20，故只要精确到2^(-10)即可
若round后得到0b0.001100110 ，则round前 < 0b0.0011001101  = 0.2001953125，无法确保<0.20
故要确保一个二进制数 <  0.20，至少需要精确到2^(-10)

TODO 浮点数的运算结果是round的吗？

故要判断一个二进制数是 < 0.20还是 >= 0.20，至少需要精确到2^(-12)。而5.20 <= 8 = 2^3，故需要不超过16位二进制有效数字。n <= 276 < 512 = 2^9，故累计误差不超过9位。而IEEE 754的单精度二进制浮点数，也就是我们平时使用的32位浮点数，只有23位有效数字。所以保险起见，采用double。
